#
# Copyright (C) The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

cmake_minimum_required(VERSION 3.4.1)

#if(CMAKE_BUILD_TYPE STREQUAL "Debug")
#	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fsanitize=address -fno-omit-frame-pointer")
#	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address -fno-omit-frame-pointer")
#	set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -fsanitize=address")
#	set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=address")
#endif()

# Set the path to the Oboe library directory\
set (OBOE_DIR ../../../../oboe)
set (OBOE_BASE_DIR ../../../../../oboe)
set (CSP_SRC_DIR ../../../../../src)
set (CSP_VM_SRC_DIR ../../../../../src/vm)
set (ANDROID_SRC_DIR ./Android)

add_subdirectory(${OBOE_BASE_DIR} ./oboe-bin)
include_directories(${OBOE_DIR}/include)

# build native_app_glue as a static lib
set(${CMAKE_C_FLAGS}, "${CMAKE_C_FLAGS}")
add_library(native_app_glue STATIC
    ${ANDROID_NDK}/sources/android/native_app_glue/android_native_app_glue.c)

if(_BMJR)
	include(_BMJR.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_BMJR -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_BUBCOM80)
	include(_BUBCOM80.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_BUBCOM80 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_BX1)
	include(_BX1.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_BX1 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_CEFUCOM21)
	include(_CEFUCOM21.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_CEFUCOM21 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_COLECOVISION)
	include(_COLECOVISION.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_COLECOVISION -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_FAMILYBASIC)
	include(_FAMILYBASIC.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FAMILYBASIC -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_FM7)
	include(_FM7.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FM7 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FM8)
	include(_FM8.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FM8 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FM16BETA_I186)
	include(_FM16BETA_I186.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FM16BETA -DHAS_I186 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FM16BETA_I286)
	include(_FM16BETA_I286.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FM16BETA -DHAS_I286 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FM77)
	include(_FM77.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FM77 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FM77AV)
	include(_FM77AV.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FM77AV -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FM77AV40)
	include(_FM77AV40.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FM77AV40 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FM77AV40EX)
	include(_FM77AV40EX.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FM77AV40EX -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FM77L4)
	include(_FM77L4.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FM77L4 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FMR30_I186)
	include(_FMR30_I186.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FMR30 -DHAS_I86 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FMR30_I286)
	include(_FMR30_I286.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FMR30 -DHAS_I286 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FMR50_I286)
	include(_FMR50_I286.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FMR50 -DHAS_I286 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FMR50_I386)
	include(_FMR50_I386.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FMR50 -DHAS_I386 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FMR50_I486)
	include(_FMR50_I486.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FMR50 -DHAS_I486 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FMR60)
	include(_FMR60.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FMR60 -DHAS_I286 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FMR70)
	include(_FMR70.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FMR60 -DHAS_I386 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FMR80)
	include(_FMR80.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FMR60 -DHAS_I486 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FP200)
	include(_FP200.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FP200 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_FP1100)
	include(_FP1100.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FP1100 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_FSA1)
	include(_FSA1.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FSA1 -D_MSX_VDP_MESS -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_FX9000P)
	include(_FX9000P.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_FX9000P -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_GAMEGEAR)
	include(_GAMEGEAR.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_GAMEGEAR -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_HC20)
	include(_HC20.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_HC20 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_HC40)
	include(_HC40.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_HC40 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_HC80)
	include(_HC80.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_HC80 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_HX20)
	include(_HX20.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_HX20 -D_MSX_VDP_MESS -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_J3100GT)
	include(_J3100GT.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_J3100GT -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_J3100SL)
	include(_J3100SL.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_J3100SL -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_JR100)
	include(_JR100.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_JR100 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_JR800)
	include(_JR800.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_JR800 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_JX)
	include(_JX.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_JX -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_M5)
	include(_M5.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_M5 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_M23)
	include(_M23.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_M23 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_M68)
	include(_M68.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_M68 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_MAP1010)
	include(_MAP1010.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MAP1010 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_MASTERSYSTEM)
	include(_MASTERSYSTEM.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MASTERSYSTEM -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_MSX1)
	include(_MSX1.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MSX1 -D_MSX_VDP_MESS -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_MSX2)
	include(_MSX2.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MSX2 -D_MSX_VDP_MESS -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_MSX2P)
	include(_MSX2P.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MSX2P -D_MSX_VDP_MESS -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_MULTI8)
	include(_MULTI8.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MULTI8 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_MYCOMZ80A)
	include(_MYCOMZ80A.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MYCOMZ80A -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ80A)
	include(_MZ80A.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ80A -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ80B)
	include(_MZ80B.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ80B -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ80K)
	include(_MZ80K.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ80K -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ700)
	include(_MZ700.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ700 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ800)
	include(_MZ800.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ800 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ1500)
	include(_MZ1500.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ1500 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ2200)
	include(_MZ2200.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ2200 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ2500)
	include(_MZ2500.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ2500 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ2800)
	include(_MZ2800.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ2800 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ3500)
	include(_MZ3500.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ3500 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ5500)
	include(_MZ5500.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ5500 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ6500)
	include(_MZ6500.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ6500 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_MZ6550)
	include(_MZ6550.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_MZ6550 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_N5200)
	include(_N5200.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_N5200 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_PASOPIA)
	include(_PASOPIA.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PASOPIA -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PASOPIA7)
	include(_PASOPIA7.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PASOPIA7 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC98DO)
	include(_PC98DO.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC98DO -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC98HA)
	include(_PC98HA.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC98HA -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC98LT)
	include(_PC98LT.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC98LT -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC98RL)
	include(_PC98RL.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC98RL -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC98XA)
	include(_PC98XA.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC98XA -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC98XL)
	include(_PC98XL.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC98XL -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC100)
	include(_PC100.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC100 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC2001)
	include(_PC2001.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC2001 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC6001)
	include(_PC6001.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC6001 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC6001MK2)
	include(_PC6001MK2.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC6001MK2 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC6001MK2SR)
	include(_PC6001MK2SR.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC6001MK2SR -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC6601)
	include(_PC6601.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC6601 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC6601SR)
	include(_PC6601SR.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC6601SR -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_PC8001)
	include(_PC8001.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC8001 -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC8001MK2)
	include(_PC8001MK2.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC8001MK2 -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC8001SR)
	include(_PC8001SR.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC8001SR -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC8201)
	include(_PC8201.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC8201 -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC8801)
	include(_PC8801.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC8801 -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC8801MA)
	include(_PC8801MA.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC8801MA -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC8801MK2)
	include(_PC8801MK2.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC8801MK2 -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC9801)
	include(_PC9801.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC9801 -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC9801E)
	include(_PC9801E.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC9801E -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC9801RA)
	include(_PC9801RA.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC9801RA -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC9801U)
	include(_PC9801U.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC9801U -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC9801VF)
	include(_PC9801VF.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC9801VF -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC9801VM)
	include(_PC9801VM.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC9801VM -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PC9801VX)
	include(_PC9801VX.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PC9801VX -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PCENGINE)
	include(_PCENGINE.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PCENGINE -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PHC20)
	include(_PHC20.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PHC20 -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PHC25)
	include(_PHC25.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PHC25 -D_Android -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PV1000)
	include(_PV1000.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PV1000 -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PV2000)
	include(_PV2000.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PV2000 -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PX7)
	include(_PX7.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PX7 -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_PYUTA)
	include(_PYUTA.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_PYUTA -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_QC10)
	include(_QC10.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_QC10 -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_RX78)
	include(_RX78.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_RX78 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_SC3000)
	include(_SC3000.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_SC3000 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_SCV)
	include(_SCV.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_SCV -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_SMB80TE)
	include(_SMB80TE.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_SMB80TE -D_Android -D_HAS_TENKEY -D_RGB565 -Wno-narrowing -D_EXTEND_MENU")
elseif(_SMC70)
	include(_SMC70.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_SMC70 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_SMC777)
	include(_SMC777.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_SMC777 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_TK85)
	include(_TK85.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_TK85 -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_TVBOY)
	include(_TVBOY.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_TVBOY -D_Android -D_RGB565 -D_EXTEND_MENU")
elseif(_X1)
	include(_X1.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_X1 -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_X1TURBO)
	include(_X1TURBO.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_X1TURBO -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU -D_USE_OPENGL_ES30")
elseif(_X1TURBOZ)
	include(_X1TURBOZ.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_X1TURBOZ -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
elseif(_X1TWIN)
	include(_X1TWIN.txt)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14 -Wall -D_X1TWIN -D_Android -D_HAS_TENKEY -D_RGB565 -D_EXTEND_MENU")
endif()

find_library(log-lib log)

target_include_directories(native-activity PRIVATE
		${ANDROID_NDK}/sources/android/native_app_glue
		${OBOE_DIR}/include
		${CSP_SRC_DIR}
		${CSP_VM_SRC_DIR}
		${ANDROID_SRC_DIR}
		)

# add lib dependencies
target_link_libraries(native-activity
		android
		native_app_glue
		log
		EGL
		GLESv2
		m
		oboe
		${log-lib})

# Export ANativeActivity_onCreate(),
# Refer to: https://github.com/android-ndk/ndk/issues/381.
set(CMAKE_SHARED_LINKER_FLAGS
    "${CMAKE_SHARED_LINKER_FLAGS} -u ANativeActivity_onCreate")
